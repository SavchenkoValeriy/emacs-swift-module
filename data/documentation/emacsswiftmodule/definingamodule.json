{"kind":"article","hierarchy":{"paths":[["doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/emacsswiftmodule\/definingamodule"]}],"metadata":{"roleHeading":"Article","modules":[{"name":"EmacsSwiftModule"}],"title":"Defining a module","role":"article"},"abstract":[{"type":"text","text":"Defining a new Emacs module from Swift."}],"sections":[],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/CallingLispFunctions","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/DefiningLispFunctions","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/TypeConversions","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/ErrorHandling"],"title":"Getting started"}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"EmacsSwiftModule-installation","level":2,"text":"EmacsSwiftModule installation"},{"type":"heading","anchor":"Swift-Package-Manager","level":3,"text":"Swift Package Manager"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the following line to you package dependencies:"}]},{"code":[".package(\"https:\/\/github.com\/SavchenkoValeriy\/emacs-swift-module.git\", from: \"1.3.4\")"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Or add "},{"code":"\"https:\/\/github.com\/SavchenkoValeriy\/emacs-swift-module.git\"","type":"codeVoice"},{"text":" directly via Xcode.","type":"text"}],"type":"paragraph"},{"level":2,"anchor":"Module-library","type":"heading","text":"Module library"},{"inlineContent":[{"type":"text","text":"Make sure that you have a dynamic library product for your module target similar to the following code:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["products: [","  .library(","    name: \"AwesomeSwiftEmacsModule\",","    type: .dynamic,","    targets: [\"AwesomeSwiftEmacsModule\"]),","],","dependencies: [","  .package(\"https:\/\/github.com\/SavchenkoValeriy\/emacs-swift-module.git\", from: \"1.3.4\")","],","targets: [","  .target(","    name: \"AwesomeSwiftEmacsModule\",","    dependencies: [","      .product(name: \"EmacsSwiftModuleDynamic\", package: \"emacs-swift-module\")","    ],","    plugins: [","      .plugin(name: \"ModuleFactoryPlugin\", package: \"emacs-swift-module\")","    ]","  )","]"]},{"inlineContent":[{"type":"text","text":"And the target should depend on the "},{"type":"codeVoice","code":"ModuleFactoryPlugin"},{"text":" to automatically setup C definitions required for each dynamic module.","type":"text"}],"type":"paragraph"},{"level":2,"text":"Writing a module code","type":"heading","anchor":"Writing-a-module-code"},{"inlineContent":[{"text":"Each module should have a class conforming to ","type":"text"},{"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Module","isActive":true,"type":"reference"},{"type":"text","text":". This protocol has only two requirements:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Module\/isGPLCompatible","isActive":true,"type":"reference"},{"type":"text","text":", a boolean property that should always return true telling Emacs that your code is GPL-compatible."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Module\/Init(_:)","isActive":true},{"text":", your moduleâ€™s ","type":"text"},{"type":"codeVoice","code":"main"},{"type":"text","text":" function, it is called when Emacs loads your module."}]}]}]},{"code":["import EmacsSwiftModule","","class AwesomeSwiftEmacsModule: Module {","  let isGPLCompatible = true","  func Init(_ env: Environment) throws {","    \/\/ initialize your module here","    try env.funcall(\"message\", \"Hello from Swift!\")","  }","}","","func createModule() -> Module { AwesomeSwiftEmacsModule() }"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now, if you compile this code with "},{"type":"codeVoice","code":"swift build"},{"type":"text","text":" and load it from Emacs via"}]},{"code":["(module-load \"SOURCE_DIR\/.build\/debug\/libYOUR_MODULE_NAME.dylib\")"],"syntax":"emacs-lisp","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"you should see the "},{"code":"\"Hello from Swift!\"","type":"codeVoice"},{"type":"text","text":" message in your Emacs."}]},{"name":"Important","style":"important","type":"aside","content":[{"inlineContent":[{"text":"Uncaught exceptions in the ","type":"text"},{"type":"codeVoice","code":"Init"},{"type":"text","text":" method prevent your module from loading, use that only when you absolutely cannot proceed."}],"type":"paragraph"}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/DefiningAModule","interfaceLanguage":"swift"},"references":{"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Module/isGPLCompatible":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"isGPLCompatible","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isGPLCompatible","url":"\/documentation\/emacsswiftmodule\/module\/isgplcompatible","abstract":[{"type":"text","text":"Every dynamic module should be distributed under the GPL compatible license."}],"role":"symbol","required":true,"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Module\/isGPLCompatible"},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Module/Init(_:)":{"type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:16EmacsSwiftModule11EnvironmentC","text":"Environment"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"title":"Init(_:)","abstract":[{"type":"text","text":"Module initialization point."}],"url":"\/documentation\/emacsswiftmodule\/module\/init(_:)","role":"symbol","required":true,"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Module\/Init(_:)"},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/DefiningLispFunctions":{"role":"article","type":"topic","title":"Defining Lisp Functions","kind":"article","url":"\/documentation\/emacsswiftmodule\/defininglispfunctions","abstract":[{"type":"text","text":"Defining Emacs Lisp functions directly from Swift."}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/DefiningLispFunctions"},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Module":{"role":"symbol","type":"topic","kind":"symbol","title":"Module","url":"\/documentation\/emacsswiftmodule\/module","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Module","kind":"identifier"}],"abstract":[{"type":"text","text":"Emacs dynamic module, @main class of your package."}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Module","navigatorTitle":[{"kind":"identifier","text":"Module"}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/TypeConversions":{"role":"article","type":"topic","title":"Type conversions","kind":"article","url":"\/documentation\/emacsswiftmodule\/typeconversions","abstract":[{"text":"Converting Swift values into Lisp values and vice versa.","type":"text"}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/TypeConversions"},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/CallingLispFunctions":{"role":"article","type":"topic","kind":"article","title":"Calling Lisp Functions","url":"\/documentation\/emacsswiftmodule\/callinglispfunctions","abstract":[{"text":"Calling Lisp functions from your Swift code.","type":"text"}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/CallingLispFunctions"},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/ErrorHandling":{"role":"article","type":"topic","title":"Error Handling","kind":"article","url":"\/documentation\/emacsswiftmodule\/errorhandling","abstract":[{"text":"Handling Lisp errors on Swift side and vice versa.","type":"text"}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/ErrorHandling"},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule":{"role":"collection","abstract":[{"type":"text","text":"A Swift library to write Emacs plugins in Swift!"}],"title":"EmacsSwiftModule","url":"\/documentation\/emacsswiftmodule","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule","kind":"symbol","type":"topic"}}}