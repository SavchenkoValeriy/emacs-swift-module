{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule"],["doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Environment"]]},"metadata":{"role":"symbol","externalID":"s:16EmacsSwiftModule7ChannelC","symbolKind":"class","modules":[{"name":"EmacsSwiftModule"}],"title":"Channel","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Channel"}],"roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"Channel"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"seeAlsoSections":[{"title":"Asynchronous callbacks","identifiers":["doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/AsyncCallbacks","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Environment\/openChannel(name:)"],"generated":true}],"identifier":{"url":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Channel","kind":"identifier"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"While "},{"isActive":true,"type":"reference","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Environment"},{"text":" is available when Emacs actively calls","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"into a module code, we might still want to ping Emacs from"},{"text":" ","type":"text"},{"text":"the Swift side and have an asynchronous callback, for example.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Channel"},{"type":"text","text":" allows exactly that. After opening a channel via"},{"type":"text","text":" "},{"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Environment\/openChannel(name:)","type":"reference","isActive":true},{"type":"text","text":", it maintains a live connection"},{"text":" ","type":"text"},{"type":"text","text":"to Emacs runtime."}]},{"type":"paragraph","inlineContent":[{"text":"See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/AsyncCallbacks","type":"reference"},{"text":" for more detail.","type":"text"}]}]}],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel\/name"]},{"title":"Instance Methods","identifiers":["doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel\/callback(_:)-1u5q4","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel\/callback(_:)-1vthb","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel\/callback(function:)","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel\/hook(_:)-3risf","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel\/hook(_:)-59aby","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel\/withAsyncEnvironment(_:)","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel\/withEnvironment(_:)"]}],"abstract":[{"type":"text","text":"A communication channel that can be used at all times."}],"variants":[{"paths":["\/documentation\/emacsswiftmodule\/channel"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Environment/openChannel(name:)":{"role":"symbol","type":"topic","kind":"symbol","title":"openChannel(name:)","url":"\/documentation\/emacsswiftmodule\/environment\/openchannel(name:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"openChannel"},{"kind":"text","text":"("},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:16EmacsSwiftModule7ChannelC","text":"Channel"}],"abstract":[{"type":"text","text":"Open a communication channel with Emacs for the time when Environment is not available."}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Environment\/openChannel(name:)"},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Channel/withEnvironment(_:)":{"role":"symbol","kind":"symbol","title":"withEnvironment(_:)","type":"topic","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel\/withEnvironment(_:)","url":"\/documentation\/emacsswiftmodule\/channel\/withenvironment(_:)","abstract":[{"text":"Execute the given closure with Emacs environment.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"withEnvironment","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Environment","kind":"typeIdentifier","preciseIdentifier":"s:16EmacsSwiftModule11EnvironmentC"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Channel/callback(_:)-1u5q4":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"callback","kind":"identifier"},{"text":"(","kind":"text"},{"text":"EmacsValue","preciseIdentifier":"s:16EmacsSwiftModule0A5ValueC","kind":"typeIdentifier"},{"text":") -> () -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"}],"abstract":[{"text":"Make a Swift callback out of an Emacs function.","type":"text"}],"title":"callback(_:)","url":"\/documentation\/emacsswiftmodule\/channel\/callback(_:)-1u5q4","role":"symbol","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel\/callback(_:)-1u5q4","type":"topic","kind":"symbol"},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Channel/hook(_:)-59aby":{"role":"symbol","kind":"symbol","title":"hook(_:)","type":"topic","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel\/hook(_:)-59aby","url":"\/documentation\/emacsswiftmodule\/channel\/hook(_:)-59aby","abstract":[{"type":"text","text":"Make a Swift callback out of an Emacs hookâ€™s name."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hook"},{"kind":"text","text":"<each "},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") -> (repeat each ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/AsyncCallbacks":{"role":"article","type":"topic","title":"Asynchronous Callbacks","kind":"article","url":"\/documentation\/emacsswiftmodule\/asynccallbacks","abstract":[{"text":"Calling Lisp functions without an active Environment.","type":"text"}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/AsyncCallbacks"},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Channel/name":{"role":"symbol","kind":"symbol","title":"name","type":"topic","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel\/name","url":"\/documentation\/emacsswiftmodule\/channel\/name","abstract":[{"text":"A name of the channel for easier identification.","type":"text"}],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"name","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Environment":{"role":"symbol","type":"topic","title":"Environment","kind":"symbol","url":"\/documentation\/emacsswiftmodule\/environment","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Environment"}],"abstract":[{"type":"text","text":"Environment is the interaction point with Emacs. If you want to do anything on the Emacs side, you need to have an Environment."}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Environment","navigatorTitle":[{"kind":"identifier","text":"Environment"}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Channel/callback(_:)-1vthb":{"role":"symbol","kind":"symbol","title":"callback(_:)","type":"topic","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel\/callback(_:)-1vthb","url":"\/documentation\/emacsswiftmodule\/channel\/callback(_:)-1vthb","abstract":[{"type":"text","text":"Make a Swift callback out of an Emacs function."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"callback"},{"kind":"text","text":"<each "},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"EmacsValue","preciseIdentifier":"s:16EmacsSwiftModule0A5ValueC"},{"kind":"text","text":") -> (repeat each "},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Channel":{"role":"symbol","type":"topic","title":"Channel","kind":"symbol","url":"\/documentation\/emacsswiftmodule\/channel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Channel","kind":"identifier"}],"abstract":[{"type":"text","text":"A communication channel that can be used at all times."}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Channel/hook(_:)-3risf":{"role":"symbol","kind":"symbol","title":"hook(_:)","type":"topic","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel\/hook(_:)-3risf","url":"\/documentation\/emacsswiftmodule\/channel\/hook(_:)-3risf","abstract":[{"type":"text","text":"Make a Swift callback out of an Emacs hookâ€™s name."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hook"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> () -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule":{"role":"collection","abstract":[{"type":"text","text":"A Swift library to write Emacs plugins in Swift!"}],"title":"EmacsSwiftModule","url":"\/documentation\/emacsswiftmodule","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule","kind":"symbol","type":"topic"},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Channel/callback(function:)":{"role":"symbol","kind":"symbol","title":"callback(function:)","type":"topic","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel\/callback(function:)","url":"\/documentation\/emacsswiftmodule\/channel\/callback(function:)","abstract":[{"text":"Make a callback that doesnâ€™t require the environment from a closure that does.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"callback"},{"kind":"text","text":"<each "},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"function"},{"kind":"text","text":": ("},{"text":"Environment","kind":"typeIdentifier","preciseIdentifier":"s:16EmacsSwiftModule11EnvironmentC"},{"text":", repeat each ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":") -> (repeat each "},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Channel/withAsyncEnvironment(_:)":{"role":"symbol","kind":"symbol","title":"withAsyncEnvironment(_:)","type":"topic","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel\/withAsyncEnvironment(_:)","url":"\/documentation\/emacsswiftmodule\/channel\/withasyncenvironment(_:)","abstract":[{"type":"text","text":"Execute the given closure with Emacs environment and return its result."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"withAsyncEnvironment","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Environment","preciseIdentifier":"s:16EmacsSwiftModule11EnvironmentC","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}]}}}