{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule"],["doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Environment"]]},"metadata":{"role":"symbol","externalID":"s:16EmacsSwiftModule11EnvironmentC11openChannel4nameAA0F0CSS_tKF","symbolKind":"method","modules":[{"name":"EmacsSwiftModule"}],"extendedModule":"EmacsSwiftModule","title":"openChannel(name:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"openChannel","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:16EmacsSwiftModule7ChannelC","kind":"typeIdentifier","text":"Channel"}],"roleHeading":"Instance Method"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/AsyncCallbacks","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel"],"title":"Asynchronous callbacks","generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Environment\/openChannel(name:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"openChannel"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel","text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:16EmacsSwiftModule7ChannelC"}],"languages":["swift"]}]},{"parameters":[{"name":"name","content":[{"type":"paragraph","inlineContent":[{"text":"the name to identify the channel.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"a new communication channel with the given name."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"The only way to communicate back to Emacs and call back","type":"text"},{"type":"text","text":" "},{"type":"text","text":"into Emacs is to open a channel. Channels donâ€™t have any"},{"type":"text","text":" "},{"type":"text","text":"lifetime restrictions associated with environments."},{"type":"text","text":" "},{"type":"text","text":"For more details, see "},{"isActive":true,"type":"reference","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/AsyncCallbacks"},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"name":"Throws","style":"note","content":[{"inlineContent":[{"type":"text","text":"an "},{"type":"reference","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/EmacsError","isActive":true},{"text":" if something goes wrong.","type":"text"}],"type":"paragraph"}],"type":"aside"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/emacsswiftmodule\/environment\/openchannel(name:)"]}],"abstract":[{"type":"text","text":"Open a communication channel with Emacs for the time when Environment is not available."}],"references":{"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Channel":{"role":"symbol","type":"topic","title":"Channel","kind":"symbol","url":"\/documentation\/emacsswiftmodule\/channel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Channel","kind":"identifier"}],"abstract":[{"type":"text","text":"A communication channel that can be used at all times."}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule":{"role":"collection","abstract":[{"type":"text","text":"A Swift library to write Emacs plugins in Swift!"}],"title":"EmacsSwiftModule","url":"\/documentation\/emacsswiftmodule","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule","kind":"symbol","type":"topic"},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Environment/openChannel(name:)":{"role":"symbol","type":"topic","kind":"symbol","title":"openChannel(name:)","url":"\/documentation\/emacsswiftmodule\/environment\/openchannel(name:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"openChannel"},{"kind":"text","text":"("},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:16EmacsSwiftModule7ChannelC","text":"Channel"}],"abstract":[{"type":"text","text":"Open a communication channel with Emacs for the time when Environment is not available."}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Environment\/openChannel(name:)"},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Environment":{"role":"symbol","type":"topic","title":"Environment","kind":"symbol","url":"\/documentation\/emacsswiftmodule\/environment","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Environment"}],"abstract":[{"type":"text","text":"Environment is the interaction point with Emacs. If you want to do anything on the Emacs side, you need to have an Environment."}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Environment","navigatorTitle":[{"kind":"identifier","text":"Environment"}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/EmacsError":{"role":"symbol","type":"topic","kind":"symbol","title":"EmacsError","url":"\/documentation\/emacsswiftmodule\/emacserror","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"EmacsError","kind":"identifier"}],"abstract":[{"type":"text","text":"The main type representing Emacs errors."}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/EmacsError","navigatorTitle":[{"kind":"identifier","text":"EmacsError"}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/AsyncCallbacks":{"role":"article","type":"topic","title":"Asynchronous Callbacks","kind":"article","url":"\/documentation\/emacsswiftmodule\/asynccallbacks","abstract":[{"text":"Calling Lisp functions without an active Environment.","type":"text"}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/AsyncCallbacks"}}}