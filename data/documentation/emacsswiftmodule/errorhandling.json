{"identifier":{"url":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/ErrorHandling","interfaceLanguage":"swift"},"abstract":[{"text":"Handling Lisp errors on Swift side and vice versa.","type":"text"}],"primaryContentSections":[{"content":[{"type":"heading","anchor":"Emacs-Errors","level":2,"text":"Emacs Errors"},{"inlineContent":[{"type":"text","text":"Emacs Lisp is a dynamically typed language, the majority of input validation and type conformance checks end up being errors. It is a normal state of things. Runtime errors in Lisp doesn’t have a stigma to them like in some other languages, especially because the user can literally call functions all the time."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"EmacsSwiftModule"},{"type":"text","text":", we surface Lisp runtime errors as Swift exceptions. And in the vast majority of the cases users should just re-throw errors back to the user. Again, this is normal, especially if it happens in a user-facing function. Any interaction with "},{"type":"reference","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Environment","isActive":true},{"text":" can potentially throw. You only handle these errors yourself if you actually expect a very specific error as a possibility and have a backup plan.","type":"text"}]},{"type":"heading","text":"Swift Errors","level":2,"anchor":"Swift-Errors"},{"type":"paragraph","inlineContent":[{"type":"text","text":"At the same time, Swift code exceptions are also fine and will be translated into Emacs error signals. You probably want to handle a bigger portion of this kind of errors, but if you won’t, nothing bad will happen. If it won’t crash Emacs, it’s not critical."}]},{"name":"Important","style":"important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you choose to disable error propagation via "},{"type":"codeVoice","code":"try!"},{"type":"text","text":", and do get an exception, it will crash Emacs. Swift runtime errors are critical."}]}]},{"type":"heading","text":"User Interruptions","level":2,"anchor":"User-Interruptions"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If your code introduces a long-running Lisp function, you should check from time to time if the user interrupted it by pressing "},{"code":"C-g","type":"codeVoice"},{"type":"text","text":" (or similar). In this situation, it is recommended to quit any work as soon as possible. You can check it via "},{"type":"reference","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Environment\/interrupted()","isActive":true},{"text":" method. If you work with environment, any call to it will throw ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/EmacsError\/interrupted"},{"text":", when in this state.","type":"text"}]},{"type":"heading","anchor":"Lifetime-Violations","text":"Lifetime Violations","level":2},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Environment","isActive":true,"type":"reference"},{"type":"text","text":" checks for lifetime and thread model consistency and throws "},{"type":"reference","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/EmacsError\/lifetimeViolation","isActive":true},{"type":"text","text":" or "},{"isActive":true,"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/EmacsError\/threadModelViolation","type":"reference"},{"type":"text","text":". Check "},{"isActive":true,"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Lifetimes","type":"reference"},{"text":" for more details.","type":"text"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/emacsswiftmodule\/errorhandling"]}],"metadata":{"roleHeading":"Article","title":"Error Handling","role":"article","modules":[{"name":"EmacsSwiftModule"}]},"hierarchy":{"paths":[["doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule"]]},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/DefiningAModule","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/CallingLispFunctions","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/DefiningLispFunctions","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/TypeConversions"],"title":"Getting started"}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"article","references":{"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Lifetimes":{"role":"article","type":"topic","kind":"article","title":"Lifetimes","url":"\/documentation\/emacsswiftmodule\/lifetimes","abstract":[{"type":"text","text":"Emacs internals lifetimes."}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Lifetimes"},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/EmacsError/interrupted":{"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/EmacsError\/interrupted","abstract":[{"type":"text","text":"Emacs user interruption (C-g)."}],"type":"topic","title":"EmacsError.interrupted","url":"\/documentation\/emacsswiftmodule\/emacserror\/interrupted","kind":"symbol","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"interrupted"}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule":{"role":"collection","abstract":[{"type":"text","text":"A Swift library to write Emacs plugins in Swift!"}],"title":"EmacsSwiftModule","url":"\/documentation\/emacsswiftmodule","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule","kind":"symbol","type":"topic"},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Environment/interrupted()":{"role":"symbol","title":"interrupted()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"interrupted"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Environment\/interrupted()","url":"\/documentation\/emacsswiftmodule\/environment\/interrupted()","kind":"symbol","abstract":[{"type":"text","text":"Checks whether the user interrupted execution of the current function."}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/DefiningAModule":{"role":"article","type":"topic","title":"Defining a module","kind":"article","url":"\/documentation\/emacsswiftmodule\/definingamodule","abstract":[{"type":"text","text":"Defining a new Emacs module from Swift."}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/DefiningAModule"},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/TypeConversions":{"role":"article","type":"topic","title":"Type conversions","kind":"article","url":"\/documentation\/emacsswiftmodule\/typeconversions","abstract":[{"text":"Converting Swift values into Lisp values and vice versa.","type":"text"}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/TypeConversions"},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/DefiningLispFunctions":{"role":"article","type":"topic","title":"Defining Lisp Functions","kind":"article","url":"\/documentation\/emacsswiftmodule\/defininglispfunctions","abstract":[{"type":"text","text":"Defining Emacs Lisp functions directly from Swift."}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/DefiningLispFunctions"},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/EmacsError/lifetimeViolation":{"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/EmacsError\/lifetimeViolation","abstract":[{"type":"text","text":"Using "},{"type":"reference","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Environment","isActive":true},{"text":" outside of its scope.","type":"text"}],"type":"topic","title":"EmacsError.lifetimeViolation","url":"\/documentation\/emacsswiftmodule\/emacserror\/lifetimeviolation","kind":"symbol","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lifetimeViolation"}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Environment":{"role":"symbol","type":"topic","title":"Environment","kind":"symbol","url":"\/documentation\/emacsswiftmodule\/environment","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Environment"}],"abstract":[{"type":"text","text":"Environment is the interaction point with Emacs. If you want to do anything on the Emacs side, you need to have an Environment."}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Environment","navigatorTitle":[{"kind":"identifier","text":"Environment"}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/CallingLispFunctions":{"role":"article","type":"topic","kind":"article","title":"Calling Lisp Functions","url":"\/documentation\/emacsswiftmodule\/callinglispfunctions","abstract":[{"text":"Calling Lisp functions from your Swift code.","type":"text"}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/CallingLispFunctions"},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/EmacsError/threadModelViolation":{"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/EmacsError\/threadModelViolation","abstract":[{"type":"text","text":"Using "},{"isActive":true,"type":"reference","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Environment"},{"type":"text","text":" in a different thread than issued it."}],"type":"topic","title":"EmacsError.threadModelViolation","kind":"symbol","url":"\/documentation\/emacsswiftmodule\/emacserror\/threadmodelviolation","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"threadModelViolation"}]}}}