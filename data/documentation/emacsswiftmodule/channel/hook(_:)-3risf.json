{"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","abstract":[{"type":"text","text":"Make a Swift callback out of an Emacs hook’s name."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hook"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"hook"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":") -> () -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"}],"platforms":["macOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"a name of a Lisp hook to turn into callback."}],"type":"paragraph"}],"name":"function"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"inlineContent":[{"type":"text","text":"a callback that if called, will eventually run the hook."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"This allows us to use Emacs hooks as callbacks in Swift APIs."},{"type":"text","text":" "},{"text":"Please, see ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/AsyncCallbacks"},{"type":"text","text":" for more details on that."}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/emacsswiftmodule\/channel\/hook(_:)-3risf"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:16EmacsSwiftModule7ChannelC4hookyyycSSF","symbolKind":"method","modules":[{"name":"EmacsSwiftModule"}],"title":"hook(_:)","role":"symbol","extendedModule":"EmacsSwiftModule","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hook"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> () -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"}],"roleHeading":"Instance Method"},"sections":[],"identifier":{"url":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel\/hook(_:)-3risf","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel"],["doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Environment","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel"]]},"references":{"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Environment":{"role":"symbol","type":"topic","title":"Environment","kind":"symbol","url":"\/documentation\/emacsswiftmodule\/environment","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Environment"}],"abstract":[{"type":"text","text":"Environment is the interaction point with Emacs. If you want to do anything on the Emacs side, you need to have an Environment."}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Environment","navigatorTitle":[{"kind":"identifier","text":"Environment"}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Channel":{"role":"symbol","type":"topic","title":"Channel","kind":"symbol","url":"\/documentation\/emacsswiftmodule\/channel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Channel","kind":"identifier"}],"abstract":[{"type":"text","text":"A communication channel that can be used at all times."}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule":{"role":"collection","abstract":[{"type":"text","text":"A Swift library to write Emacs plugins in Swift!"}],"title":"EmacsSwiftModule","url":"\/documentation\/emacsswiftmodule","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule","kind":"symbol","type":"topic"},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Channel/hook(_:)-3risf":{"role":"symbol","kind":"symbol","title":"hook(_:)","type":"topic","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel\/hook(_:)-3risf","url":"\/documentation\/emacsswiftmodule\/channel\/hook(_:)-3risf","abstract":[{"type":"text","text":"Make a Swift callback out of an Emacs hook’s name."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hook"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> () -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/AsyncCallbacks":{"role":"article","type":"topic","title":"Asynchronous Callbacks","kind":"article","url":"\/documentation\/emacsswiftmodule\/asynccallbacks","abstract":[{"text":"Calling Lisp functions without an active Environment.","type":"text"}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/AsyncCallbacks"}}}