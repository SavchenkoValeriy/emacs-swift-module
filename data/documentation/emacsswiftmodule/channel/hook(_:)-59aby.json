{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hook","kind":"identifier"},{"text":"<each ","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"hook","kind":"internalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") -> (repeat each ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" repeat each "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"EmacsConvertible","preciseIdentifier":"s:16EmacsSwiftModule0A11ConvertibleP","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/EmacsConvertible","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"function","content":[{"type":"paragraph","inlineContent":[{"text":"a name of a Lisp hook to turn into callback.","type":"text"}]}]}]},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"a callback that if called, will eventually run the hook."}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This allows us to use Emacs hooks as callbacks in Swift APIs."},{"type":"text","text":" "},{"type":"text","text":"Please, see "},{"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/AsyncCallbacks","type":"reference","isActive":true},{"text":" for more details on that.","type":"text"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/emacsswiftmodule\/channel\/hook(_:)-59aby"]}],"abstract":[{"type":"text","text":"Make a Swift callback out of an Emacs hook’s name."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel"],["doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Environment","doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel\/hook(_:)-59aby"},"metadata":{"roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"EmacsSwiftModule"}],"role":"symbol","title":"hook(_:)","extendedModule":"EmacsSwiftModule","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hook"},{"text":"<each ","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> (repeat each "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"}],"externalID":"s:16EmacsSwiftModule7ChannelC4hookyyxxQpcSSRvzAA0A11ConvertibleRzlF"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Channel/hook(_:)-59aby":{"role":"symbol","kind":"symbol","title":"hook(_:)","type":"topic","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel\/hook(_:)-59aby","url":"\/documentation\/emacsswiftmodule\/channel\/hook(_:)-59aby","abstract":[{"type":"text","text":"Make a Swift callback out of an Emacs hook’s name."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hook"},{"kind":"text","text":"<each "},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") -> (repeat each ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule":{"role":"collection","abstract":[{"type":"text","text":"A Swift library to write Emacs plugins in Swift!"}],"title":"EmacsSwiftModule","url":"\/documentation\/emacsswiftmodule","identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule","kind":"symbol","type":"topic"},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Environment":{"role":"symbol","type":"topic","title":"Environment","kind":"symbol","url":"\/documentation\/emacsswiftmodule\/environment","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Environment"}],"abstract":[{"type":"text","text":"Environment is the interaction point with Emacs. If you want to do anything on the Emacs side, you need to have an Environment."}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Environment","navigatorTitle":[{"kind":"identifier","text":"Environment"}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/EmacsConvertible":{"role":"symbol","type":"topic","title":"EmacsConvertible","kind":"symbol","url":"\/documentation\/emacsswiftmodule\/emacsconvertible","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"EmacsConvertible","kind":"identifier"}],"abstract":[{"type":"text","text":"The main protocol for value conversions between Emacs Lisp and Swift."}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/EmacsConvertible","navigatorTitle":[{"kind":"identifier","text":"EmacsConvertible"}]},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/AsyncCallbacks":{"role":"article","type":"topic","title":"Asynchronous Callbacks","kind":"article","url":"\/documentation\/emacsswiftmodule\/asynccallbacks","abstract":[{"text":"Calling Lisp functions without an active Environment.","type":"text"}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/AsyncCallbacks"},"doc://EmacsSwiftModule/documentation/EmacsSwiftModule/Channel":{"role":"symbol","type":"topic","title":"Channel","kind":"symbol","url":"\/documentation\/emacsswiftmodule\/channel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Channel","kind":"identifier"}],"abstract":[{"type":"text","text":"A communication channel that can be used at all times."}],"identifier":"doc:\/\/EmacsSwiftModule\/documentation\/EmacsSwiftModule\/Channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}]}}}